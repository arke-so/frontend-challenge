/* tslint:disable */
/* eslint-disable */
/**
 * Arke IAM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DateAttr } from './DateAttr';
import {
    DateAttrFromJSON,
    DateAttrFromJSONTyped,
    DateAttrToJSON,
} from './DateAttr';

/**
 * 
 * @export
 * @interface Base
 */
export interface Base {
    /**
     * 
     * @type {DateAttr}
     * @memberof Base
     */
    created?: DateAttr;
    /**
     * 
     * @type {DateAttr}
     * @memberof Base
     */
    updated?: DateAttr;
    /**
     * 
     * @type {number}
     * @memberof Base
     */
    version: number;
    /**
     * 
     * @type {boolean}
     * @memberof Base
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Base
     */
    notes?: string;
}

/**
 * Check if a given object implements the Base interface.
 */
export function instanceOfBase(value: object): value is Base {
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function BaseFromJSON(json: any): Base {
    return BaseFromJSONTyped(json, false);
}

export function BaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Base {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : DateAttrFromJSON(json['created']),
        'updated': json['updated'] == null ? undefined : DateAttrFromJSON(json['updated']),
        'version': json['version'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function BaseToJSON(value?: Base | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created': DateAttrToJSON(value['created']),
        'updated': DateAttrToJSON(value['updated']),
        'version': value['version'],
        'archived': value['archived'],
        'notes': value['notes'],
    };
}

