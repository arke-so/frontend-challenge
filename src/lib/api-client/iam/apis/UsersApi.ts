/* tslint:disable */
/* eslint-disable */
/**
 * Arke IAM API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UpdatePasswordRequest, UserCreate, UserDetails, UserSummary } from '../models/index'
import * as runtime from '../runtime'

export interface CreateUserRequest {
  userCreate?: UserCreate
}

export interface DisableUserRequest {
  userId: string
}

export interface ShowUserRequest {
  userId: string
}

export interface UpdatePasswordOperationRequest {
  userId: string
  updatePasswordRequest?: UpdatePasswordRequest
}

export interface UpdateUserRequest {
  userId: string
  userDetails?: UserDetails
}

/**
 *
 */
export class UsersApi extends runtime.BaseAPI {
  /**
   */
  async createUser(
    requestParameters: CreateUserRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<UserDetails> {
    await new Promise(resolve => setTimeout(resolve, 500))
    return {
      id: '1',
      username: 'john_doe',
      fullName: 'John Doe',
      roles: ['admin'],
      version: 1,
      archived: false,
      notes: '',
    }
  }

  /**
   */
  async disableUser(
    requestParameters: DisableUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await new Promise(resolve => setTimeout(resolve, 500))
  }

  /**
   */
  async listUsers(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<UserSummary>> {
    await new Promise(resolve => setTimeout(resolve, 500))
    return [
      {
        id: '1',
        username: 'john_doe',
        fullName: 'John Doe',
      },
      {
        id: '2',
        username: 'jane_smith',
        fullName: 'Jane Smith',
      },
      {
        id: '3',
        username: 'alex_king',
        fullName: 'Alex King',
      },
      {
        id: '4',
        username: 'maria_hill',
        fullName: 'Maria Hill',
      },
      {
        id: '5',
        username: 'peter_parker',
        fullName: 'Peter Parker',
      },
      {
        id: '6',
        username: 'bruce_wayne',
        fullName: 'Bruce Wayne',
      },
      {
        id: '7',
        username: 'clark_kent',
        fullName: 'Clark Kent',
      },
      {
        id: '8',
        username: 'diana_prince',
        fullName: 'Diana Prince',
      },
      {
        id: '9',
        username: 'tony_stark',
        fullName: 'Tony Stark',
      },
      {
        id: '10',
        username: 'natasha_romanoff',
        fullName: 'Natasha Romanoff',
      },
      {
        id: '11',
        username: 'steve_rogers',
        fullName: 'Steve Rogers',
      },
      {
        id: '12',
        username: 'bucky_barnes',
        fullName: 'Bucky Barnes',
      },
      {
        id: '13',
        username: 'wanda_maximoff',
        fullName: 'Wanda Maximoff',
      },
      {
        id: '14',
        username: 'sam_wilson',
        fullName: 'Sam Wilson',
      },
      {
        id: '15',
        username: 'tchalla_wakanda',
        fullName: "T'Challa Wakanda",
      },
      {
        id: '16',
        username: 'pietro_maximoff',
        fullName: 'Pietro Maximoff',
      },
      {
        id: '17',
        username: 'shuri_wakanda',
        fullName: 'Shuri Wakanda',
      },
      {
        id: '18',
        username: 'thor_odinson',
        fullName: 'Thor Odinson',
      },
      {
        id: '19',
        username: 'loki_laufeyson',
        fullName: 'Loki Laufeyson',
      },
      {
        id: '20',
        username: 'nick_fury',
        fullName: 'Nick Fury',
      },
    ]
  }

  /**
   */
  async showUser(
    requestParameters: ShowUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<UserDetails> {
    await new Promise(resolve => setTimeout(resolve, 500))
    return {
      fullName: 'John Doe',
      id: '1',
      roles: ['admin'],
      username: 'john_doe',
      version: 1,
      email: 'john.doe@email.com',
    }
  }

  /**
   */
  async updatePassword(
    requestParameters: UpdatePasswordOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await new Promise(resolve => setTimeout(resolve, 500))
  }

  /**
   */
  async updateUser(
    requestParameters: UpdateUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await new Promise(resolve => setTimeout(resolve, 500))
  }
}
