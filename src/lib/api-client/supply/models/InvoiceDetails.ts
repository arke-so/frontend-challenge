/* tslint:disable */
/* eslint-disable */
/**
 * Arke Supply API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SupplierSummary } from './SupplierSummary';
import {
    SupplierSummaryFromJSON,
    SupplierSummaryFromJSONTyped,
    SupplierSummaryToJSON,
} from './SupplierSummary';
import type { DateAttr } from './DateAttr';
import {
    DateAttrFromJSON,
    DateAttrFromJSONTyped,
    DateAttrToJSON,
} from './DateAttr';
import type { OrderSummary } from './OrderSummary';
import {
    OrderSummaryFromJSON,
    OrderSummaryFromJSONTyped,
    OrderSummaryToJSON,
} from './OrderSummary';
import type { InvoiceLineAttr } from './InvoiceLineAttr';
import {
    InvoiceLineAttrFromJSON,
    InvoiceLineAttrFromJSONTyped,
    InvoiceLineAttrToJSON,
} from './InvoiceLineAttr';
import type { CompanyAttr } from './CompanyAttr';
import {
    CompanyAttrFromJSON,
    CompanyAttrFromJSONTyped,
    CompanyAttrToJSON,
} from './CompanyAttr';

/**
 * 
 * @export
 * @interface InvoiceDetails
 */
export interface InvoiceDetails {
    /**
     * 
     * @type {DateAttr}
     * @memberof InvoiceDetails
     */
    created?: DateAttr;
    /**
     * 
     * @type {DateAttr}
     * @memberof InvoiceDetails
     */
    updated?: DateAttr;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDetails
     */
    version: number;
    /**
     * 
     * @type {boolean}
     * @memberof InvoiceDetails
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    externalId: string;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceDetails
     */
    time: Date;
    /**
     * 
     * @type {CompanyAttr}
     * @memberof InvoiceDetails
     */
    supplierAttr: CompanyAttr;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    status: InvoiceDetailsStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    currency: string;
    /**
     * 
     * @type {CompanyAttr}
     * @memberof InvoiceDetails
     */
    receiverAttr: CompanyAttr;
    /**
     * 
     * @type {Array<InvoiceLineAttr>}
     * @memberof InvoiceDetails
     */
    invoiceLines: Array<InvoiceLineAttr>;
    /**
     * 
     * @type {SupplierSummary}
     * @memberof InvoiceDetails
     */
    supplier?: SupplierSummary;
    /**
     * 
     * @type {OrderSummary}
     * @memberof InvoiceDetails
     */
    order?: OrderSummary;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    supplierId?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    orderInternalId?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDetails
     */
    orderId?: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDetails
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDetails
     */
    totalVatIncl: number;
}


/**
 * @export
 */
export const InvoiceDetailsStatusEnum = {
    Inbound: 'inbound',
    Verified: 'verified',
    Paid: 'paid'
} as const;
export type InvoiceDetailsStatusEnum = typeof InvoiceDetailsStatusEnum[keyof typeof InvoiceDetailsStatusEnum];


/**
 * Check if a given object implements the InvoiceDetails interface.
 */
export function instanceOfInvoiceDetails(value: object): value is InvoiceDetails {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('externalId' in value) || value['externalId'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    if (!('supplierAttr' in value) || value['supplierAttr'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('receiverAttr' in value) || value['receiverAttr'] === undefined) return false;
    if (!('invoiceLines' in value) || value['invoiceLines'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('totalVatIncl' in value) || value['totalVatIncl'] === undefined) return false;
    return true;
}

export function InvoiceDetailsFromJSON(json: any): InvoiceDetails {
    return InvoiceDetailsFromJSONTyped(json, false);
}

export function InvoiceDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : DateAttrFromJSON(json['created']),
        'updated': json['updated'] == null ? undefined : DateAttrFromJSON(json['updated']),
        'version': json['version'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'id': json['id'] == null ? undefined : json['id'],
        'externalId': json['external_id'],
        'time': (new Date(json['time'])),
        'supplierAttr': CompanyAttrFromJSON(json['supplier_attr']),
        'status': json['status'],
        'currency': json['currency'],
        'receiverAttr': CompanyAttrFromJSON(json['receiver_attr']),
        'invoiceLines': ((json['invoice_lines'] as Array<any>).map(InvoiceLineAttrFromJSON)),
        'supplier': json['supplier'] == null ? undefined : SupplierSummaryFromJSON(json['supplier']),
        'order': json['order'] == null ? undefined : OrderSummaryFromJSON(json['order']),
        'supplierId': json['supplier_id'] == null ? undefined : json['supplier_id'],
        'orderInternalId': json['order_internal_id'] == null ? undefined : json['order_internal_id'],
        'orderId': json['order_id'] == null ? undefined : json['order_id'],
        'total': json['total'],
        'totalVatIncl': json['total_vat_incl'],
    };
}

export function InvoiceDetailsToJSON(value?: InvoiceDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created': DateAttrToJSON(value['created']),
        'updated': DateAttrToJSON(value['updated']),
        'version': value['version'],
        'archived': value['archived'],
        'notes': value['notes'],
        'id': value['id'],
        'external_id': value['externalId'],
        'time': ((value['time']).toISOString()),
        'supplier_attr': CompanyAttrToJSON(value['supplierAttr']),
        'status': value['status'],
        'currency': value['currency'],
        'receiver_attr': CompanyAttrToJSON(value['receiverAttr']),
        'invoice_lines': ((value['invoiceLines'] as Array<any>).map(InvoiceLineAttrToJSON)),
        'supplier': SupplierSummaryToJSON(value['supplier']),
        'order': OrderSummaryToJSON(value['order']),
        'supplier_id': value['supplierId'],
        'order_internal_id': value['orderInternalId'],
        'order_id': value['orderId'],
        'total': value['total'],
        'total_vat_incl': value['totalVatIncl'],
    };
}

