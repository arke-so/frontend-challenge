/* tslint:disable */
/* eslint-disable */
/**
 * Arke Supply API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PricesAttrDealsInner } from './PricesAttrDealsInner';
import {
    PricesAttrDealsInnerFromJSON,
    PricesAttrDealsInnerFromJSONTyped,
    PricesAttrDealsInnerToJSON,
} from './PricesAttrDealsInner';

/**
 * 
 * @export
 * @interface PricesAttr
 */
export interface PricesAttr {
    /**
     * 
     * @type {string}
     * @memberof PricesAttr
     */
    currency: PricesAttrCurrencyEnum;
    /**
     * 
     * @type {number}
     * @memberof PricesAttr
     */
    unit: number;
    /**
     * 
     * @type {number}
     * @memberof PricesAttr
     */
    vat?: number;
    /**
     * 
     * @type {Array<PricesAttrDealsInner>}
     * @memberof PricesAttr
     */
    deals?: Array<PricesAttrDealsInner>;
}


/**
 * @export
 */
export const PricesAttrCurrencyEnum = {
    Eur: 'EUR',
    Usd: 'USD',
    Gbp: 'GBP'
} as const;
export type PricesAttrCurrencyEnum = typeof PricesAttrCurrencyEnum[keyof typeof PricesAttrCurrencyEnum];


/**
 * Check if a given object implements the PricesAttr interface.
 */
export function instanceOfPricesAttr(value: object): value is PricesAttr {
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('unit' in value) || value['unit'] === undefined) return false;
    return true;
}

export function PricesAttrFromJSON(json: any): PricesAttr {
    return PricesAttrFromJSONTyped(json, false);
}

export function PricesAttrFromJSONTyped(json: any, ignoreDiscriminator: boolean): PricesAttr {
    if (json == null) {
        return json;
    }
    return {
        
        'currency': json['currency'],
        'unit': json['unit'],
        'vat': json['vat'] == null ? undefined : json['vat'],
        'deals': json['deals'] == null ? undefined : ((json['deals'] as Array<any>).map(PricesAttrDealsInnerFromJSON)),
    };
}

export function PricesAttrToJSON(value?: PricesAttr | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'currency': value['currency'],
        'unit': value['unit'],
        'vat': value['vat'],
        'deals': value['deals'] == null ? undefined : ((value['deals'] as Array<any>).map(PricesAttrDealsInnerToJSON)),
    };
}

