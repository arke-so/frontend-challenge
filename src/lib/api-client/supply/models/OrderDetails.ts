/* tslint:disable */
/* eslint-disable */
/**
 * Arke Supply API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SupplierSummary } from './SupplierSummary';
import {
    SupplierSummaryFromJSON,
    SupplierSummaryFromJSONTyped,
    SupplierSummaryToJSON,
} from './SupplierSummary';
import type { DateAttr } from './DateAttr';
import {
    DateAttrFromJSON,
    DateAttrFromJSONTyped,
    DateAttrToJSON,
} from './DateAttr';
import type { PricedQuantifiedItem } from './PricedQuantifiedItem';
import {
    PricedQuantifiedItemFromJSON,
    PricedQuantifiedItemFromJSONTyped,
    PricedQuantifiedItemToJSON,
} from './PricedQuantifiedItem';
import type { CompanyAttr } from './CompanyAttr';
import {
    CompanyAttrFromJSON,
    CompanyAttrFromJSONTyped,
    CompanyAttrToJSON,
} from './CompanyAttr';

/**
 * 
 * @export
 * @interface OrderDetails
 */
export interface OrderDetails {
    /**
     * 
     * @type {DateAttr}
     * @memberof OrderDetails
     */
    created?: DateAttr;
    /**
     * 
     * @type {DateAttr}
     * @memberof OrderDetails
     */
    updated?: DateAttr;
    /**
     * 
     * @type {number}
     * @memberof OrderDetails
     */
    version: number;
    /**
     * 
     * @type {boolean}
     * @memberof OrderDetails
     */
    archived?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    internalId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderDetails
     */
    time?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderDetails
     */
    expectedDeliveryTime: Date;
    /**
     * 
     * @type {CompanyAttr}
     * @memberof OrderDetails
     */
    supplierAttr?: CompanyAttr;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    status: OrderDetailsStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    defaultCurrency?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderDetails
     */
    totalVatIncl: number;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    supplierId: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    paymentMethod: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetails
     */
    shippingAddress: string;
    /**
     * 
     * @type {CompanyAttr}
     * @memberof OrderDetails
     */
    buyerAttr?: CompanyAttr;
    /**
     * 
     * @type {SupplierSummary}
     * @memberof OrderDetails
     */
    supplier?: SupplierSummary;
    /**
     * 
     * @type {Array<PricedQuantifiedItem>}
     * @memberof OrderDetails
     */
    rawMaterials: Array<PricedQuantifiedItem>;
    /**
     * 
     * @type {number}
     * @memberof OrderDetails
     */
    total: number;
}


/**
 * @export
 */
export const OrderDetailsStatusEnum = {
    Draft: 'draft',
    Sent: 'sent',
    Accepted: 'accepted',
    Shipped: 'shipped'
} as const;
export type OrderDetailsStatusEnum = typeof OrderDetailsStatusEnum[keyof typeof OrderDetailsStatusEnum];


/**
 * Check if a given object implements the OrderDetails interface.
 */
export function instanceOfOrderDetails(value: object): value is OrderDetails {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('expectedDeliveryTime' in value) || value['expectedDeliveryTime'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('totalVatIncl' in value) || value['totalVatIncl'] === undefined) return false;
    if (!('supplierId' in value) || value['supplierId'] === undefined) return false;
    if (!('paymentMethod' in value) || value['paymentMethod'] === undefined) return false;
    if (!('shippingAddress' in value) || value['shippingAddress'] === undefined) return false;
    if (!('rawMaterials' in value) || value['rawMaterials'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function OrderDetailsFromJSON(json: any): OrderDetails {
    return OrderDetailsFromJSONTyped(json, false);
}

export function OrderDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'created': json['created'] == null ? undefined : DateAttrFromJSON(json['created']),
        'updated': json['updated'] == null ? undefined : DateAttrFromJSON(json['updated']),
        'version': json['version'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'id': json['id'] == null ? undefined : json['id'],
        'internalId': json['internal_id'] == null ? undefined : json['internal_id'],
        'name': json['name'],
        'time': json['time'] == null ? undefined : (new Date(json['time'])),
        'expectedDeliveryTime': (new Date(json['expected_delivery_time'])),
        'supplierAttr': json['supplier_attr'] == null ? undefined : CompanyAttrFromJSON(json['supplier_attr']),
        'status': json['status'],
        'defaultCurrency': json['default_currency'] == null ? undefined : json['default_currency'],
        'totalVatIncl': json['total_vat_incl'],
        'supplierId': json['supplier_id'],
        'paymentMethod': json['payment_method'],
        'shippingAddress': json['shipping_address'],
        'buyerAttr': json['buyer_attr'] == null ? undefined : CompanyAttrFromJSON(json['buyer_attr']),
        'supplier': json['supplier'] == null ? undefined : SupplierSummaryFromJSON(json['supplier']),
        'rawMaterials': ((json['raw_materials'] as Array<any>).map(PricedQuantifiedItemFromJSON)),
        'total': json['total'],
    };
}

export function OrderDetailsToJSON(value?: OrderDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'created': DateAttrToJSON(value['created']),
        'updated': DateAttrToJSON(value['updated']),
        'version': value['version'],
        'archived': value['archived'],
        'notes': value['notes'],
        'id': value['id'],
        'internal_id': value['internalId'],
        'name': value['name'],
        'time': value['time'] == null ? undefined : ((value['time']).toISOString()),
        'expected_delivery_time': ((value['expectedDeliveryTime']).toISOString()),
        'supplier_attr': CompanyAttrToJSON(value['supplierAttr']),
        'status': value['status'],
        'default_currency': value['defaultCurrency'],
        'total_vat_incl': value['totalVatIncl'],
        'supplier_id': value['supplierId'],
        'payment_method': value['paymentMethod'],
        'shipping_address': value['shippingAddress'],
        'buyer_attr': CompanyAttrToJSON(value['buyerAttr']),
        'supplier': SupplierSummaryToJSON(value['supplier']),
        'raw_materials': ((value['rawMaterials'] as Array<any>).map(PricedQuantifiedItemToJSON)),
        'total': value['total'],
    };
}

