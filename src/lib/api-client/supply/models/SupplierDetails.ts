/* tslint:disable */
/* eslint-disable */
/**
 * Arke Supply API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AddressAttr } from './AddressAttr'
import { AddressAttrFromJSON, AddressAttrToJSON } from './AddressAttr'
import type { BankAttr } from './BankAttr'
import { BankAttrFromJSON, BankAttrToJSON } from './BankAttr'
import type { DateAttr } from './DateAttr'
import { DateAttrFromJSON, DateAttrToJSON } from './DateAttr'
import type { EmailAttr } from './EmailAttr'
import { EmailAttrFromJSON, EmailAttrToJSON } from './EmailAttr'

/**
 *
 * @export
 * @interface SupplierDetails
 */
export interface SupplierDetails {
  /**
   *
   * @type {DateAttr}
   * @memberof SupplierDetails
   */
  created?: DateAttr
  /**
   *
   * @type {DateAttr}
   * @memberof SupplierDetails
   */
  updated?: DateAttr
  /**
   *
   * @type {number}
   * @memberof SupplierDetails
   */
  version: number
  /**
   *
   * @type {boolean}
   * @memberof SupplierDetails
   */
  archived?: boolean
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  notes?: string
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  name: string
  /**
   *
   * @type {Array<string>}
   * @memberof SupplierDetails
   */
  categories: Array<string>
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  vatNo: string
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  phone: string
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  defaultCurrency: string
  /**
   *
   * @type {Array<EmailAttr>}
   * @memberof SupplierDetails
   */
  emails: Array<EmailAttr>
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  description?: string
  /**
   *
   * @type {Array<AddressAttr>}
   * @memberof SupplierDetails
   */
  addresses: Array<AddressAttr>
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  contactName?: string
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  website?: string
  /**
   *
   * @type {string}
   * @memberof SupplierDetails
   */
  paymentMethod?: string
  /**
   *
   * @type {BankAttr}
   * @memberof SupplierDetails
   */
  bank: BankAttr
}

/**
 * Check if a given object implements the SupplierDetails interface.
 */
export function instanceOfSupplierDetails(value: object): value is SupplierDetails {
  if (!('version' in value) || value['version'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('categories' in value) || value['categories'] === undefined) return false
  if (!('vatNo' in value) || value['vatNo'] === undefined) return false
  if (!('phone' in value) || value['phone'] === undefined) return false
  if (!('defaultCurrency' in value) || value['defaultCurrency'] === undefined) return false
  if (!('emails' in value) || value['emails'] === undefined) return false
  if (!('addresses' in value) || value['addresses'] === undefined) return false
  if (!('bank' in value) || value['bank'] === undefined) return false
  return true
}

export function SupplierDetailsFromJSON(json: any): SupplierDetails {
  return SupplierDetailsFromJSONTyped(json, false)
}

export function SupplierDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupplierDetails {
  if (json == null) {
    return json
  }
  return {
    created: json['created'] == null ? undefined : DateAttrFromJSON(json['created']),
    updated: json['updated'] == null ? undefined : DateAttrFromJSON(json['updated']),
    version: json['version'],
    archived: json['archived'] == null ? undefined : json['archived'],
    notes: json['notes'] == null ? undefined : json['notes'],
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'],
    categories: json['categories'],
    vatNo: json['vat_no'],
    phone: json['phone'],
    defaultCurrency: json['default_currency'],
    emails: (json['emails'] as Array<any>).map(EmailAttrFromJSON),
    description: json['description'] == null ? undefined : json['description'],
    addresses: (json['addresses'] as Array<any>).map(AddressAttrFromJSON),
    contactName: json['contact_name'] == null ? undefined : json['contact_name'],
    website: json['website'] == null ? undefined : json['website'],
    paymentMethod: json['payment_method'] == null ? undefined : json['payment_method'],
    bank: BankAttrFromJSON(json['bank']),
  }
}

export function SupplierDetailsToJSON(value?: SupplierDetails | null): any {
  if (value == null) {
    return value
  }
  return {
    created: DateAttrToJSON(value['created']),
    updated: DateAttrToJSON(value['updated']),
    version: value['version'],
    archived: value['archived'],
    notes: value['notes'],
    id: value['id'],
    name: value['name'],
    categories: value['categories'],
    vat_no: value['vatNo'],
    phone: value['phone'],
    default_currency: value['defaultCurrency'],
    emails: (value['emails'] as Array<any>).map(EmailAttrToJSON),
    description: value['description'],
    addresses: (value['addresses'] as Array<any>).map(AddressAttrToJSON),
    contact_name: value['contactName'],
    website: value['website'],
    payment_method: value['paymentMethod'],
    bank: BankAttrToJSON(value['bank']),
  }
}
